<!DOCTYPE html>
<html lang="en">

<head>
    <%- include ("../partials/head.ejs") %>
</head>

<body>
    <h1><strong>Trailblazer Elementary Coders!</strong></h1>
    <p>
        Welcome Trailblazer coders! This website was created for you to help demonstate
        the awesomeness of coding. If you are interested in learning more or contributing
        to the site, let your teachers know. As you progress through your course at
        Trailblazer, this site will be updated to help demonstate the benefits of the skills
        you are learning and how these concepts can be applied to more complex applications.
        Hopefully, we can also make this site look a
        lot cooler =).
    </p>
    <h3>
        <strong>Happy coding!</strong>
    </h3>
    <p>
        The entire source code for this project is available at the
        <a href="https://github.com/bradhuber1/trailblazer">Trailblazer Software Repository</a>
        for free!
    </p>
    <canvas id="fractalCanvas" height="600" width="700"></canvas>
    <p>
        The above picture is actually not just a picture, it was created with code!
        Very similar to how you learned to draw using block coding in Scratch, the
        tree above was created by code in your web browser. Every time you visit this
        page, computer code is executed to draw the tree. The code for this tree was created by following this
        <a href="https://progur.com/2016/10/procedural-generation-create-fractal-trees-javascript.html">tutorial</a>.
    </p>
    <p>
        This tree is a special kind of tree called a <a href="https://en.wikipedia.org/wiki/Fractal">fractal</a> tree.
        A repeated pattern is used to draw it. Instead of a loop, it uses a neat technique called
        <a href="https://en.wikipedia.org/wiki/Recursion">recursion</a>, which shares some similarity to the
        loops you have recently learned about. This idea can be demostrated by
        holding up two mirrors and seeing your reflection repeated over and over.
    </p>
    <p>
        Hopefully you enjoy this project and I look forward to coding with you! ~ Mr. Huber
    </p>
    <p>Contact: <a href="mailto:bradhuber1@yahoo.com">Brad Huber</a></p>
    <script>
        /*
            The below code was created following the tutorial found at 
            https://progur.com/2016/10/procedural-generation-create-fractal-trees-javascript.html
        */
        let ctx = document.getElementById("fractalCanvas").getContext("2d");
        ctx.strokeStyle = "purple";
        ctx.fillStyle = "darkgreen";
        ctx.shadowBlur = 15;
        ctx.shadowColor = "rgba(0,0,0,0.8)";
        function draw(startX, startY, len, angle, branchWidth) {
            ctx.lineWidth = branchWidth;
            ctx.beginPath();
            ctx.save();

            ctx.translate(startX, startY);
            ctx.rotate(angle * Math.PI / 180);
            ctx.moveTo(0, 0);
            if (angle > 0) {
                ctx.bezierCurveTo(10, -len / 2, 10, -len / 2, 0, -len);
            } else {
                ctx.bezierCurveTo(-10, -len / 2, -10, -len / 2, 0, -len);
            }
            ctx.stroke();

            if (len < 10) {
                ctx.beginPath();
                ctx.arc(0, -len, 10, 0, Math.PI / 2);
                ctx.fill();
                ctx.restore();
                return;
            }

            draw(0, -len, len * 0.8, angle + 10, branchWidth * 0.8);
            draw(0, -len, len * 0.8, angle - 10, branchWidth * 0.8);
            ctx.restore();
        }
        draw(350, 600, 120, 0, 10);
    </script>
</body>

</html>